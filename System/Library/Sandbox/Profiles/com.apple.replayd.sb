;;; Copyright (c) 2017 Apple Inc.  All Rights reserved.
;;;
;;; WARNING: The sandbox rules in this file currently constitute
;;; Apple System Private Interface and are subject to change at any time and
;;; without notice.
;;;
(version 1)

(deny default)
(deny file-map-executable iokit-get-properties process-info* nvram*)
(deny dynamic-code-generation)

(deny mach-priv-host-port)

(import "system.sb")
(import "com.apple.corefoundation.sb")
(corefoundation)

;;; Homedir-relative path filters
(define (home-regex home-relative-regex)
    (regex (string-append "^" (regex-quote (param "HOME")) home-relative-regex)))

(define (home-subpath home-relative-subpath)
    (subpath (string-append (param "HOME") home-relative-subpath)))

(define (home-prefix home-relative-prefix)
    (prefix (string-append (param "HOME") home-relative-prefix)))

(define (home-literal home-relative-literal)
    (literal (string-append (param "HOME") home-relative-literal)))


(allow iokit-get-properties (iokit-property "IOConsoleUsers"))
(allow iokit-get-properties (iokit-property "IOGVAHEVCEncode"))
(allow iokit-get-properties (iokit-property "IOAVEHEVCEncode"))
(allow iokit-get-properties (iokit-property "IOGVAHEVCDecode"))
(allow iokit-get-properties (iokit-property "IOGVACodec"))
(allow iokit-get-properties (iokit-property "IOGVAEncoderRestricted"))
(allow iokit-get-properties (iokit-property "board-id"))
(allow iokit-get-properties (iokit-property "IODVDBundleName"))
(allow iokit-get-properties (iokit-property "SafeEjectRequested"))
(allow iokit-get-properties (iokit-property "MetalPluginName"))
(allow iokit-get-properties (iokit-property "MetalPluginClassName"))
(allow iokit-get-properties (iokit-property "IOPCITunnelled"))
(allow iokit-get-properties (iokit-property "AAPL,slot-name"))
(allow iokit-get-properties (iokit-property "built-in"))
(allow iokit-get-properties (iokit-property "IOVARendererID"))
(allow iokit-get-properties (iokit-property "Protocol Characteristics"))
(allow iokit-get-properties (iokit-property "IOGVAHEVCEncodeCapabilities"))

(allow iokit-open (iokit-user-client-class "IOSurfaceRootUserClient"))
(allow iokit-open (iokit-user-client-class "AMDRadeonX4000_AMDAccelDevice"))
(allow iokit-open (iokit-user-client-class "AMDRadeonX4000_AMDAccelSharedUserClient"))
(allow iokit-open (iokit-user-client-class "IGAccelDevice"))
(allow iokit-open (iokit-user-client-class "IGAccelSharedUserClient"))
(allow iokit-open (iokit-user-client-class "AMDRadeonX4000_AMDAccelCommandQueue"))
(allow iokit-open (iokit-user-client-class "IGAccelVideoContextMain"))
(allow iokit-open (iokit-user-client-class "IGAccelVideoContextMedia"))
(allow iokit-open (iokit-user-client-class "IGAccelCommandQueue"))
(allow iokit-open (iokit-user-client-class "IGAccelVideoContextVEBox"))
(allow iokit-open (iokit-user-client-class "RootDomainUserClient"))

(allow device-camera)
(allow device-microphone)

(allow nvram-get (nvram-variable "IOGVACodec"))

(deny process-info*)
(allow process-info-pidinfo)
(allow process-info-pidfdinfo (target self))
(allow process-info-pidfileportinfo (target self))
(allow process-info-setcontrol (target self))
(allow process-info-dirtycontrol (target self))
(allow process-info-rusage (target self))

(with-filter (system-attribute apple-internal)
(allow file-read-data file-map-executable (subpath "/usr/local/lib"))
(allow file-read-data file-map-executable (literal "/Library/Video/Plug-Ins"))
(allow file-read-data file-map-executable (literal "/System/Library/Extensions/AppleHDA.kext/Contents/PlugIns/AppleHDAHALPlugIn.bundle/Contents/MacOS/AppleHDAHALPlugIn"))
(allow file-read-data file-map-executable (literal "/System/Library/Components/AudioCodecs.component/Contents/MacOS/AudioCodecs"))
(allow file-read-data file-map-executable (literal "/System/Library/Extensions/AppleIntelKBLGraphicsMTLDriver.bundle/Contents/MacOS/AppleIntelKBLGraphicsMTLDriver"))
(allow file-read-data file-map-executable (literal "/System/Library/Extensions/AMDRadeonVADriver2.bundle/Contents/MacOS/AMDRadeonVADriver2"))
(allow file-read-data file-map-executable (literal "/System/Library/Extensions/AppleIntelKBLGraphicsVADriver.bundle/Contents/MacOS/AppleIntelKBLGraphicsVADriver"))
(allow file-read-data file-map-executable (literal "/System/Library/Extensions/AppleIntelKBLGraphicsVAME.bundle/Contents/MacOS/AppleIntelKBLGraphicsVAME"))
(allow file-read-data file-map-executable (literal "/System/Library/Extensions/AppleIntelHD5000GraphicsMTLDriver.bundle/Contents/MacOS/AppleIntelHD5000GraphicsMTLDriver"))
(allow file-read-data file-map-executable (literal "/System/Library/Components/CoreAudio.component/Contents/MacOS/CoreAudio"))
(allow file-read-data file-map-executable (literal "/System/Library/Extensions/AppleIntelHD5000GraphicsVADriver.bundle/Contents/MacOS/AppleIntelHD5000GraphicsVADriver"))
(allow file-read-data file-map-executable (literal "/System/Library/Extensions/AppleIntelHSWVA.bundle/Contents/MacOS/AppleIntelHSWVA"))
(allow file-read-data file-map-executable (literal "/System/Library/Extensions/AMDRadeonVADriver.bundle/Contents/MacOS/AMDRadeonVADriver")))

(allow file-write-create file-write-unlink
    (subpath "/Library/Sandbox/Profiles/com.apple.replayd.sb"))

(allow ipc-posix-shm-write-create (ipc-posix-name "com.apple.AppleDatabaseChanged"))
(allow ipc-posix-shm-write-data (ipc-posix-name "com.apple.AppleDatabaseChanged"))
(allow ipc-posix-shm-read-data (ipc-posix-name "com.apple.AppleDatabaseChanged"))
(allow ipc-posix-shm-write-data (ipc-posix-name-regex #"^AudioIO"))
(allow ipc-posix-shm-read-data (ipc-posix-name-regex #"^AudioIO"))
(allow ipc-posix-shm (ipc-posix-name-regex #"^AudioIO"))

(allow file-read*
    (home-subpath "/Desktop")
    (home-subpath "/Downloads/Problem 47890467/Lakitu_Binaries/ReplayKitTester.app/Contents/PlugIns")
    (home-subpath "/Library")
    (subpath "/Library/Application Support/com.apple.replayd")
    (subpath "/Library/Application Support/CrashReporter")
    (subpath "/Applications")
    (subpath "/Library/MessageTracer")
    (home-literal "/Library/Preferences/com.apple.LaunchServices/com.apple.launchservices.secure.plist")
    (literal "/Library/Preferences/com.apple.security.plist")
    (subpath "/private/var")
    (subpath "/usr/libexec")
    (subpath "/usr/libexec/replayd"))

;; Your mach domain
(allow mach-lookup
    (global-name "com.apple.audio.audiohald")
    (global-name "com.apple.audio.AudioComponentRegistrar")
    (global-name "com.apple.UNCUserNotification")
    (global-name "com.apple.CoreDisplay.Notification")
    (global-name "com.apple.windowserver.active")
    (global-name "com.apple.coreservices.launchservicesd")
    (global-name "com.apple.coremedia.endpoint.xpc")
    (global-name "com.apple.CoreDisplay.master")
    (global-name "com.apple.rtcreportingd")
    (global-name "com.apple.SecurityServer")
    (global-name "com.apple.lsd.mapdb")
    (global-name "com.apple.lsd.modifydb")
    (global-name "com.apple.ocspd")
    (global-name "com.apple.analyticsd")
    (global-name "com.apple.pluginkit.pkd")
    (global-name "com.apple.runningboard")
    (global-name "com.apple.cmio.AppleCameraAssistant")
    (global-name "com.apple.tccd")
    (global-name "com.apple.tccd.system")
    (global-name "com.apple.cmio.VDCAssistant"))

;; For resolving symlinks, realpath(3), and equivalents.
(allow file-read-metadata)

;; For validating the entitlements of clients.
(allow process-info-codesignature)

;; Your preference domain
(allow user-preference-read
    (preference-domain "com.apple.avfaudio")
    (preference-domain "com.apple.coreaudio")
    (preference-domain "com.apple.coremedia")
    (preference-domain "com.apple.avfoundation")
    (preference-domain "com.apple.security")
    (preference-domain "com.apple.gpu")
    (preference-domain "com.apple.GVAEncoder")
    (preference-domain "com.apple.AppleGVA")
    (preference-domain "com.apple.cmio")
    (preference-domain "com.apple.corevideo")
    (preference-domain "com.apple.opengl")
    (preference-domain "replayd")
    (preference-domain "com.apple.replayd")
    (preference-domain "kCFPreferencesAnyApplication"))

(allow file-write-create (home-subpath "/Library/Application Support/com.apple.replayd"))

;; Read/write access to a temporary directory.
(allow file-read* file-write*
    (home-literal "/Library/Application Support/com.apple.replayd")
    (subpath (param "TMPDIR"))
    (subpath (param "DARWIN_CACHE_DIR")))

;; Read/write cache access
(let ((cache-path-filter (home-subpath "/Library/Caches/com.apple.replayd")))
  (allow file-read* file-write* cache-path-filter)
  (allow file-issue-extension
    (require-all
      (extension-class "com.apple.app-sandbox.read" "com.apple.app-sandbox.read-write")
      cache-path-filter)))
