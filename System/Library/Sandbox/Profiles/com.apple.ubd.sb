;;;;;;  Copyright 2012 Apple Inc. All rights reserved.
;;;;;;
;;;;;;  Sandbox profile for ubd.
;;;;;;

(version 1)
(deny default)

(import "system.sb")
(import "opendirectory.sb")
(import "com.apple.corefoundation.sb")
(corefoundation)

(allow mach-per-user-lookup)
(allow file-read-metadata distributed-notification-post)

;;; Homedir-relative path filters
(define (lib-regex lib-relative-regex)
  (regex (string-append "^" (regex-quote (param "_LIB")) lib-relative-regex)))
(define regex-home lib-regex)
(define (lib-subpath lib-relative-subpath)
  (subpath (string-append (param "_LIB") lib-relative-subpath)))
(define (lib-literal lib-relative-literal)
  (literal (string-append (param "_LIB") lib-relative-literal)))

(allow user-preference*
       (preference-domain "com.apple.ubd")
       (preference-domain "com.apple.mmcs"))

;;; Allow access to the genstore
(allow file-read*
       (mount-relative-regex #"^/\.DocumentRevisions-V100/PerUID/[0-9]+/[^/]+/com\.apple\.ubiquity$")
       (mount-relative-regex #"^/\.DocumentRevisions-V100/PerUID/[0-9]+/[^/]+/com\.apple\.ubiquity/")
       (mount-relative-regex #"^/\.DocumentRevisions-V100/AllUIDs/[^/]+/com\.apple\.ubiquity$")
       (mount-relative-regex #"^/\.DocumentRevisions-V100/AllUIDs/[^/]+/com\.apple\.ubiquity/")
)

;;; Extensions
(allow file-read* file-write* (extension "com.apple.app-sandbox.read-write"))
(allow file-read* (extension "com.apple.app-sandbox.read"))

;;; Security framework
(allow file-read* file-write* (lib-subpath "/Keychains"))
(allow file-read*
       (subpath "/private/var/db/mds")
       (literal "/private/var/db/DetachedSignatures"))

;;; Safe Saves use .TemporaryItems, see e.g. <rdar://problem/9245317>
(allow file-read* file-write*
       (mount-relative-regex #"^/\.TemporaryItems/")
       (mount-relative-regex #"^/\.TemporaryItems$")
)

(allow file-read* file-write*
       (lib-subpath "/Application Support/Ubiquity")
       (lib-subpath "/Logs/Ubiquity")
       (lib-subpath "/Caches/com.apple.ubd")
       (lib-regex   "/Mobile Documents")  ; rename_default_collection_dir() may append a "personId"
       (lib-regex   "/processed-Mobile Documents\.delete") ; recover_deleted_data() <rdar://problem/11851599>
       (regex #"^/private/var/folders/[^/]+/[^/]+/C/mds(/|$)")
       (subpath (param "_TMP")))

(allow file-read*
       (literal "/")
       (literal "/Library/Keychains/System.keychain")
       (literal "/Library/Preferences/.GlobalPreferences.plist")
       (literal "/Library/Preferences/com.apple.security.plist")
       (literal "/Library/Preferences/SystemConfiguration/preferences.plist")
       (literal "/Library/Application Support/CrashReporter/SubmitDiagInfo.domains")
       (literal "/Library/Preferences/com.apple.AOSKit.plist")
       (literal "/Library/Preferences/com.apple.apsd.plist")
       (lib-literal "")
       (lib-literal "/Application Support/SyncServices/Local/ClientsWithChanges/com.apple.Keychain")
       (lib-literal "/Preferences/.GlobalPreferences.plist")
       (lib-regex   "/Preferences/ByHost/\.GlobalPreferences\.[^/]+\.plist")
       (lib-literal "/Preferences/com.apple.security.plist")
       (lib-literal "/Preferences/com.apple.security.revocation.plist")
       (lib-literal "/Preferences/MobileMeAccounts.plist"))

(allow mach-lookup
	(global-name "com.apple.FSEvents")
	(global-name "com.apple.FileCoordination")
;; IOPMConnectionGetSystemCapabilities
	(global-name "com.apple.PowerManagement.control")
;; SecItemCopyMatching
	(global-name "com.apple.SecurityServer")
;; APSConnection
	(global-name "com.apple.apsd")
;; CFURLConnection
	(global-name "com.apple.cookied")
;; _CSCopyAppleIDAccounts
	(global-name "com.apple.coreservices.appleid.authentication")
;; GenerationalStorage
	(global-name "com.apple.revisiond")
;; <rdar://problem/13328934> sandboxd[61004] ([60982]): ubd(60982) deny mach-lookup com.apple.windowserver.active
	(global-name "com.apple.windowserver.active")
;; HTTPS
	(global-name "com.apple.ocspd")
)

(allow ipc-posix-shm
       (ipc-posix-name-regex #"^/tmp/com\.apple\.csseed\.")
       (ipc-posix-name "FNetwork.defaultStorageSession")
       (ipc-posix-name "apple.shm.notification_center")
       (ipc-posix-name "com.apple.AppleDatabaseChanged"))

(system-network)
(allow network-outbound sysctl-read system-fsctl)
(allow sysctl-write) ;; for setting CTL_KERN:KERN_RAGEVNODE
(allow process-exec (literal "/System/Library/PrivateFrameworks/Ubiquity.framework/Versions/A/Support/ubd"))

;;; only used when in test mode, never in production
(if (param "_UBD_TEST_MODE") (begin
  (allow network*)
  (allow file-read* (literal "/AppleInternal"))
  (allow file-read* file-write* (lib-subpath "/Preferences/com.apple.ubd.testsuite"))
  (allow mach-register (global-name-regex #"^com\.apple\.ubd\..+$"))
  ;;; do not log violations, crash so that we're sure the test fails
  ;;;FIXME, this doesn't work, ping sandbox people (deny default (with send-signal SIGABRT))

  (define (ubd-register-root path)
          (allow file-read* file-write* (regex (string-append "^" (regex-quote path) ".*"))))

  (let ubd-register-roots-array ((i 0))
  (let ((path (param (string-append "_ROOT_" (number->string i)))))
    (if path
        (begin
          (ubd-register-root path)
          (ubd-register-roots-array (+ i 1))))))
))
