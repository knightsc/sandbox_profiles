;;; Copyright (c) 2017 Apple Inc.  All Rights reserved.
;;;
;;; WARNING: The sandbox rules in this file currently constitute
;;; Apple System Private Interface and are subject to change at any time and
;;; without notice.
;;;
(version 1)

(allow (with report) default)
(allow (with report) file-map-executable process-info* nvram*)
(allow (with report) dynamic-code-generation)

(import "system.sb")
(import "com.apple.corefoundation.sb")
(corefoundation)

;;; Homedir-relative path filters
(define (home-regex home-relative-regex)
    (regex (string-append "^" (regex-quote (param "HOME")) home-relative-regex)))

(define (home-subpath home-relative-subpath)
    (subpath (string-append (param "HOME") home-relative-subpath)))

(define (home-prefix home-relative-prefix)
    (prefix (string-append (param "HOME") home-relative-prefix)))

(define (home-literal home-relative-literal)
    (literal (string-append (param "HOME") home-relative-literal)))


(allow process-info* (target self))
(allow process-info-pidinfo)

(allow iokit-get-properties)

;;(external-accessory-access)
;;(geoservices)
;;(identity-services-client)
;;(managed-configuration-read)
;;(nano-registry-client)
;;(network-client)
;;(power-assertions)

(allow sysctl-read
       (sysctl-name "kern.wake_abs_time"))

(allow iokit-open
       (iokit-user-client-class
           "AppleBasebandUserClient"
           "AppleSPUHIDDriverUserClient"
           "IOHIDEventServiceFastPathUserClient"))

(with-filter (iokit-registry-entry-class "IOHIDEventServiceFastPathUserClient")
    (allow iokit-set-properties
           (iokit-property "interval")))

(allow mach-lookup
       (global-name "com.apple.SBUserNotification"
                    "com.apple.apsd"
                    "com.apple.assertiond.applicationstateconnection"
                    "com.apple.backboard.hid.services"
                    "com.apple.carkit.dnd.service"
                    "com.apple.commcenter.ari.rt.xpc"
                    "com.apple.commcenter.atcs.xpc"
                    "com.apple.commcenter.coretelephony.xpc"
                    "com.apple.fairplayd.versioned"
                    "com.apple.frontboard.systemappservices"
                    "com.apple.gpsd"
                    "com.apple.healthd.server"
                    "com.apple.iohideventsystem"
                    "com.apple.locationd.registration"
                    "com.apple.locationd.synchronous"
                    "com.apple.lsd.xpc"
                    "com.apple.mobileactivationd"
                    "com.apple.navigationListener"
                    "com.apple.passd.usage"
                    "com.apple.pipelined"
                    "com.apple.pipelined.maintenance"
                    "com.apple.routined.registration"
                    "com.apple.server.bluetooth"
                    "com.apple.server.bluetooth.le.att.xpc"
                    "com.apple.timed.xpc"
                    "com.apple.wifi.manager"
                    "com.apple.wirelessproxd"))


;; For resolving symlinks, realpath(3), and equivalents.
(allow file-read-metadata)

;; For validating the entitlements of clients.
(allow process-info-codesignature)

(allow user-preference-read user-preference-write
       (preference-domain "com.apple.locationd"))

;; Read/write access to a temporary directory.
(allow file-read* file-write*
       (subpath (param "TMPDIR"))
       (subpath (param "DARWIN_CACHE_DIR")))

;; Read/write cache access
(let ((cache-path-filter (home-subpath "/Library/Caches/locationd")))
  (allow file-read* file-write* cache-path-filter)
  (allow file-issue-extension
    (require-all
      (extension-class "com.apple.app-sandbox.read" "com.apple.app-sandbox.read-write")
      cache-path-filter)))

(allow file-read* file-write*
    (subpath "/private/var/root/Library/Caches/locationd")
    (subpath "/tmp/com.apple.locationd")
    (home-subpath "/Library/locationd")
)

(with-filter (system-attribute apple-internal)
  (allow file-read*
         (literal "/usr/local/bin")))
