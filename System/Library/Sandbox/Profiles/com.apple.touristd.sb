;;; Copyright (c) 2017 Apple Inc.  All Rights reserved.
;;;
;;; WARNING: The sandbox rules in this file currently constitute
;;; Apple System Private Interface and are subject to change at any time and
;;; without notice.
;;;
(version 1)

(deny default)
(deny file-map-executable iokit-get-properties process-info* nvram*)
(deny dynamic-code-generation)

(import "system.sb")
(import "com.apple.corefoundation.sb")
(corefoundation)

;;; Homedir-relative path filters
(define (home-regex home-relative-regex)
(regex (string-append "^" (regex-quote (param "HOME")) home-relative-regex)))

(define (home-subpath home-relative-subpath)
(subpath (string-append (param "HOME") home-relative-subpath)))

(define (home-prefix home-relative-prefix)
(prefix (string-append (param "HOME") home-relative-prefix)))

(define (home-literal home-relative-literal)
(literal (string-append (param "HOME") home-relative-literal)))

(allow process-info* (target self))

;; For resolving symlinks, realpath(3), and equivalents.
(allow file-read-metadata)

;; For validating the entitlements of clients.
(allow process-info-codesignature)

;;allow safari to open the url
(allow lsopen)

;; preference domain.
(allow user-preference-read user-preference-write
(preference-domain "com.apple.touristd"))
(allow user-preference-read user-preference-write
(preference-domain "NSGlobalDomain"))
(allow file-read* file-write* (home-subpath "/Library/Preferences/"))
(allow file-read* file-write* (literal "/Library/Preferences/.GlobalPreferences.plist"))

(allow file-read*
(subpath "/System/Library/PrivateFrameworks/Noticeboard.framework")
(literal "/private/var/db/mds/system/mdsDirectory.db")
(literal "/private/var/db/mds/system/mdsObject.db")
(literal "/private/var/db/mds/messages/se_SecurityMessages")
(literal "/private/var/db/DetachedSignatures")
(regex #"/Library/Preferences/\.GlobalPreferences\.plist$")
(regex #"/Library/Preferences/ByHost/\.GlobalPreferences\.")
(regex #"/Library/Preferences/com.apple.security\.plist$"))

(allow file-write-data file-write-create file-read*
(regex #"^/private/var/folders/[^/]+/[^/]+/C/mds/mdsDirectory\.db$")
(regex #"^/private/var/folders/[^/]+/[^/]+/C/mds/mdsDirectory\.db_$")
(regex #"^/private/var/folders/[^/]+/[^/]+/C/mds/mdsObject\.db$")
(regex #"^/private/var/folders/[^/]+/[^/]+/C/mds/mdsObject\.db_$"))

;; private frameworks.
(allow file-map-executable (subpath "/System/Library/PrivateFrameworks/"))
(allow file-map-executable (subpath "/System/Library/Frameworks/"))

;;allow outbound network connections.
(system-network)
(allow network-outbound)
(allow ipc-posix-shm-read-data)
(allow ipc-posix-shm-read-data (ipc-posix-name "com.apple.AppleDatabaseChanged"))
(allow ipc-posix-shm-write-data (ipc-posix-name "com.apple.AppleDatabaseChanged"))

;;allow mach lookup.
(allow mach-lookup
(global-name "com.apple.cookied")
(global-name "com.apple.ocspd")
(global-name "com.apple.coreservices.launchservicesd")
(global-name "com.apple.dock.server")
(global-name "com.apple.lsd.mapdb")
(global-name "com.apple.lsd.modifydb")
(global-name "com.apple.syncdefaultsd")
(global-name "com.apple.usernoted.daemon_client")
(global-name "com.apple.coreservices.quarantine-resolver")
(global-name "com.apple.SecurityServer")
(global-name "com.apple.windowserver.active")
(global-name "com.apple.cfnetwork.cfnetworkagent")
(global-name "com.apple.private.notificationcenter-system"))


;;allow get properties.
(allow iokit-get-properties
(require-all
(iokit-registry-entry-class "IOPlatformExpertDevice")
(iokit-registry-entry-class "IORegisterForSystemPower")
(iokit-registry-entry-class "IORegistryEntryCreateCFProperty")))

(allow iokit-open (iokit-user-client-class "RootDomainUserClient"))
(allow iokit-get-properties)

;; Read/write access to a temporary directory.
(allow file-read* file-write*
(subpath (param "TMPDIR"))
(subpath (param "DARWIN_CACHE_DIR"))
(subpath "/Library/Application Support/CrashReporter/"))


(allow file-read*
(subpath "/Library/Application Support/CrashReporter/")
(subpath "/private/var/db/mds/messages")
(literal "/Library/Preferences/com.apple.security.plist"))


;; Read/write access to the previous system version.
(allow file-read-data (literal "/private/var/db/PreviousSystemVersion.plist"))
(allow file-read-data (regex #"^/Users/[^.]+/Library/Keychains/*"))
(allow file-read-data (home-literal "/.CFUserTextEncoding"))

;; Read/write access to com.apple.touristd’s cache.
(let ((cache-path-filter (home-prefix "/Library/Caches/com.apple.touristd")))
(allow file-read* file-write* cache-path-filter)
(allow file-issue-extension
(require-all
(extension-class "com.apple.app-sandbox.read" "com.apple.app-sandbox.read-write")
cache-path-filter)))

;; Read/write access to com.apple.touristd’s application support.
(let ((appsupport-path-filter (home-prefix "/Library/Application Support/com.apple.touristd")))
(allow file-read* file-write* appsupport-path-filter)
(allow file-issue-extension
(require-all
(extension-class "com.apple.app-sandbox.read" "com.apple.app-sandbox.read-write")
appsupport-path-filter)))



