(version 1)
(deny default)

(import "system.sb")


; Utilities
(define (string-prefix? pattern str)
    (let loop ((i 0))
        (cond ((>= i (string-length pattern)) #t)
            ((>= i (string-length str)) #f)
            ((char=? (string-ref pattern i) (string-ref str i)) (loop (+ i 1)))
            (else #f))))
(define (string-tail str start)
    (substring str start (string-length str)))


; Helper
(define (home-literal home-relative-literal)
    (literal (string-append (param "HOME_DIR") home-relative-literal)
             (string-append (param "REAL_HOME_DIR") home-relative-literal)))

(define (home-regex home-relative-regex)
    (regex (string-append "^" (regex-quote (param "HOME_DIR")) home-relative-regex)
           (string-append "^" (regex-quote (param "REAL_HOME_DIR")) home-relative-regex)))

(define (home-subpath home-relative-subpath)
    (subpath (string-append (param "HOME_DIR") home-relative-subpath)
             (string-append (param "REAL_HOME_DIR") home-relative-subpath)))


; Usage: (private-literal "/etc"), which expands to
;        (literal "/etc" "/private/etc")
(define (private-literal literal-string)
    (literal literal-string
             (string-append "/private" literal-string)))

; Usage: (private-subpath "/etc"), which expands to
;        (subpath "/etc" "/private/etc")
(define (private-subpath subpath-string)
    (subpath subpath-string
             (string-append "/private" subpath-string)))

; Usage: (private-regex #"^/var/folders/[^/]+/[^/]+/C/mds/mds\.lock$"), which expands to
;        (regex #"^/var/folders/[^/]+/[^/]+/C/mds/mds\.lock$" #"^/private/var/folders/[^/]+/[^/]+/C/mds/mds\.lock$")
(define (private-regex regex-string)
    (regex (string-append "^" (if (string-prefix? "^" regex-string) (string-tail regex-string 1) regex-string))
           (string-append "^" (string-append "/private" (if (string-prefix? "^" regex-string) (string-tail regex-string 1) regex-string)))))


(define (allow-file-read-metadata-users-base-dir)
    (allow file-read-metadata
        (subpath (param "USERS_BASE_DIR")
                 (param "USERS_REAL_BASE_DIR"))))

(define (allow-file-access-to-user-cache-dir)
    (allow file-read* file-write* (subpath (param "USER_CACHE_DIR"))))

(allow file-issue-extension
       (home-subpath "/Library/Caches/CommCenter"))


;;;; Rules start here

(allow file-read*
       (literal "/")
       (private-literal "/tmp/ct.shutdown")
       (private-literal "/tmp/CommCenter.dumping")
       (literal "/Library/Keychains/System.keychain")
       (literal "/Library/Preferences/SystemConfiguration/preferences.plist")
       (literal "/Library/Preferences/com.apple.security.plist")
       (literal "/Library/Preferences/com.apple.security.systemidentities.plist")
       (literal "/Library/Preferences/.GlobalPreferences.plist")
       (home-subpath "/Library/Caches")
       (home-subpath "/Library/Keychains")
       (home-subpath "/Library/Logs")
       (home-subpath "/Library/Preferences")
       (home-subpath "/Library/SyncedPreferences")
       (home-subpath "/Library/Audio/Plug-Ins/Components")
       (private-literal "/etc/hosts")
       (private-literal "/var/db/DetachedSignatures")
       (private-literal "/var/db/mds/messages/se_SecurityMessages")
       (private-literal "/var/db/mds/system/mdsDirectory.db")
       (private-literal "/var/db/mds/system/mdsObject.db")
       (private-regex #"^/var/folders/[^/]+/[^/]+/C/mds/mds\.lock$")
       (subpath "/Library/Audio/Plug-Ins/Components")
       (subpath "/Library/Audio/Plug-Ins/HAL")
       (subpath "/System/Library/Keychains")
       (subpath "/System/Library/PrivateFrameworks")
       (subpath "/System/Library/Frameworks")
       (subpath "/System/Library/CoreServices")
       (subpath "/System/Library/Components")
       (subpath "/System/Library/Extensions/AppleHDA.kext")
       (subpath "/System/Library/LocationBundles")
       (subpath "/System/Library/QuickTime/QuickTimeComponents.component")
       (subpath "/usr/lib"))

(allow-file-read-metadata-users-base-dir)
(allow-file-access-to-user-cache-dir)

(allow file-read-metadata
       (literal "/AppleInternal")
       (subpath "/Applications")
       (literal "/Library")
       (subpath "/Library/Caches")
       (subpath "/Library/Keychains")
       (literal "/Library/Security/Trust Settings/Admin.plist")
       (literal "/System/Library/LocationBundles/IPTelephonyEmergency.bundle")
       (subpath "/System/Library/Security/Certificates.bundle")
       ;;; For launching SecurityPreferencePane
       (subpath "/System/Library/PreferencePanes/Security.prefPane")
       (subpath "/System/Library/Security/Certificates.bundle")
       ;;
       (home-subpath "")
       (literal "/private")
       (private-literal "/var")
       (private-literal "/var/db")
       (private-literal "/var/db/mds")
       (private-literal "/var/db/mds/system")
       (private-literal "/var/run/systemkeychaincheck.done")
       (private-subpath "/var/folders")
       (literal "/usr/lib/libspindump.dylib")
       (private-literal "/tmp/CommCenter.KeepAlive.Enabled"))

(allow file-read-data
       (subpath "/System/Library/Security/Certificates.bundle")
       ;;; For launching SecurityPreferencePane
       (subpath "/System/Library/PreferencePanes/Security.prefPane")
       (subpath "/System/Library/Security/Certificates.bundle")
       ;;
       (subpath "/usr/share/zoneinfo"))

(allow file-write*
       (home-subpath "/Library/Caches")
       (home-subpath "/Library/Keychains")
       (home-subpath "/Library/Logs")
       (home-subpath "/Library/Preferences")
       (private-literal "/tmp/ct.shutdown")
       (private-literal "/tmp/CommCenter.dumping")
       (private-literal "/tmp/CommCenter.KeepAlive.Enabled")
       ; mediaserver log
       (home-regex "/logs/mediaserverd/JitterBuffer")
       ;
       (private-regex #"^/var/folders/[^/]+/[^/]+/C/mds/mdsObject\.db$")
       (private-regex #"^/var/folders/[^/]+/[^/]+/C/mds/mdsObject\.db_$")
       (private-regex #"^/var/folders/[^/]+/[^/]+/C/mds/mdsDirectory\.db_$"))

(allow file-write-data
       (private-regex #"^/var/folders/[^/]+/[^/]+/C/mds/mds\.lock$"))


;;; Audio
(allow device-microphone)
(allow ipc-posix-shm-read* ipc-posix-shm-write-data
    (ipc-posix-name-regex "^AudioIO"))

(allow iokit-open
       (iokit-user-client-class "IOAudioControlUserClient")
       (iokit-user-client-class "IOAudioEngineUserClient")
       (iokit-user-client-class "RootDomainUserClient"))

(allow iokit-set-properties
    (iokit-property "IOAudioControlValue"))


(allow ipc-posix-shm-read-data
       ; <--
       (ipc-posix-name "apple.shm.cfprefsd.daemon")
       ; -->
       (ipc-posix-name "FNetwork.defaultStorageSession")
       (ipc-posix-name "com.apple.AppleDatabaseChanged"))

(allow ipc-posix-shm-write-data
       (ipc-posix-name "com.apple.AppleDatabaseChanged"))

(allow mach-lookup
       ;;; For launching SecurityPreferencePane
       (global-name "com.apple.coreservices.quarantine-resolver")
       ;;
       (global-name "com.apple.CoreServices.coreservicesd")
       (global-name "com.apple.SecurityServer")
       (global-name "com.apple.SystemConfiguration.NetworkInformation")
       (global-name "com.apple.SystemConfiguration.configd")
       (global-name "com.apple.WirelessCoexManager")
       (global-name "com.apple.accountsd.accountmanager")
       (global-name "com.apple.apsd")
       (global-name "com.apple.awdd")
       (global-name "com.apple.commcenter.atcs.xpc")
       (global-name "com.apple.commcenter.mobile-helper")
       (global-name "com.apple.commcenter.root-helper")
       (global-name "com.apple.commcenter.xpc")
       (global-name "com.apple.commcenter.coretelephony.xpc")
       (global-name "com.apple.cookied")
       (global-name "com.apple.coreservices.launchservicesd")
       (global-name "com.apple.distributed_notifications@Uv3")
       (global-name "com.apple.identityservicesd.desktop.auth")
       (global-name "com.apple.ipTelephony")
       (global-name "com.apple.locationd.desktop.registration")
       ; <--
       (global-name "com.apple.locationd.desktop.synchronous")
       (global-name "com.apple.locationd.desktop.spi")
       ; -->
       (global-name "com.apple.logind")
       (global-name "com.apple.marco")
       (global-name "com.apple.networkd_privileged")
       (global-name "com.apple.ocspd")
       ; <--
       (global-name "com.apple.rtcreportingd")
       ; -->
       (global-name "com.apple.securityd.xpc")
       (global-name "com.apple.syncdefaultsd")
       (global-name "com.apple.usymptomsd")
       (global-name "com.apple.windowserver.active")
       ; <--
       (global-name "com.apple.Telephony")
       ; -->
       (global-name "com.apple.CoreLocation.agent")
       (global-name "com.apple.audio.audiohald")
       (global-name "com.apple.audio.coreaudiod")
       (global-name "com.apple.pluginkit.pkd")
       (global-name "com.apple.incoming-call-filter-server")
       (global-name "com.apple.CrashReporterSupportHelper")
       (global-name "com.apple.UNCUserNotification")
       ;;; For CallKit from TelephonyProvider
       (global-name "com.apple.callkit.callsourcehost")
       (global-name "com.apple.callkit.callcontrollerhost")
       (global-name "com.apple.videoconference.camera"))


; From system.sb
(system-network)


(allow system-socket)

(allow network-inbound
       (local tcp "*:*")
       (local udp "*:*"))

(allow network-outbound
       (require-all
           (require-any
               (remote tcp "*:*")
               (remote udp "*:*")
               ; For mDNSResponder
               (literal "/private/var/run/mDNSResponder"))
           (require-not (remote ip "localhost:*"))))


(allow process-fork)

;;; For launching Security SecurityPreferencePane
(allow process-exec*
       (subpath "/System/Library/PreferencePanes/Security.prefPane"))

(allow lsopen)


(allow sysctl-write
       (sysctl-name "kern.ipc.maxsockbuf"))

